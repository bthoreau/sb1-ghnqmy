---
import Layout from '../layouts/Layout.astro';
import CryptoPriceWidget from '../components/CryptoPriceWidget';
import ChatBot from '../components/ChatBot';
import NewsCard from '../components/NewsCard';
import { fetchNews } from '../lib/api';

const { articles } = await fetchNews(1);

const courses = [
  {
    title: 'Crypto Tax Fundamentals',
    description: 'Essential guide to cryptocurrency taxation and reporting requirements.',
    duration: '2 hours',
    level: 'Beginner'
  },
  {
    title: 'DeFi Tax Implications',
    description: 'Understanding tax obligations for DeFi transactions and yield farming.',
    duration: '3 hours',
    level: 'Intermediate'
  },
  {
    title: 'NFT Tax Masterclass',
    description: 'Comprehensive guide to NFT taxation and reporting strategies.',
    duration: '2 hours',
    level: 'Intermediate'
  },
  {
    title: 'Mining Tax Guide',
    description: 'Tax implications and deductions for crypto mining operations.',
    duration: '2 hours',
    level: 'Advanced'
  }
];

const taxGuides = [
  {
    title: 'Crypto Tax 101',
    description: 'Essential guide for first-time crypto tax filers.',
    category: 'Basics'
  },
  {
    title: 'Tax Loss Harvesting',
    description: 'Strategies to optimize your crypto tax position.',
    category: 'Strategy'
  },
  {
    title: 'International Tax Guide',
    description: 'Cross-border cryptocurrency tax implications.',
    category: 'Advanced'
  },
  {
    title: 'DeFi Tax Reporting',
    description: 'How to report DeFi yields and liquidity mining.',
    category: 'DeFi'
  },
  {
    title: 'Mining Income Guide',
    description: 'Tax treatment of mining rewards and expenses.',
    category: 'Mining'
  },
  {
    title: 'NFT Tax Guide',
    description: 'Understanding NFT creation and trading taxes.',
    category: 'NFTs'
  }
];

const resources = [
  {
    title: 'Tax Calculator',
    description: 'Free crypto tax calculation tool for different jurisdictions.',
    link: '#tax-calculator'
  },
  {
    title: 'Form Templates',
    description: 'Ready-to-use crypto tax reporting templates.',
    link: '#templates'
  },
  {
    title: 'Expert Network',
    description: 'Connect with certified crypto tax professionals.',
    link: '#experts'
  },
  {
    title: 'Regulatory Updates',
    description: 'Latest cryptocurrency tax regulations and guidelines.',
    link: '#updates'
  },
  {
    title: 'Documentation Guide',
    description: 'Best practices for crypto transaction record-keeping.',
    link: '#documentation'
  },
  {
    title: 'Audit Protection',
    description: 'Guidelines for handling crypto tax audits.',
    link: '#audit'
  }
];
---

<Layout title="CryptoLegal - Crypto Tax Expertise">
  <section id="home" class="min-h-screen flex items-center py-20">
    <div class="container mx-auto px-4">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        <div class="md:col-span-2">
          <h1 class="text-4xl md:text-6xl font-bold mb-8">Simplify Your Crypto Taxes</h1>
          <p class="text-xl mb-8">Expert guidance, tools, and resources for cryptocurrency tax compliance and optimization.</p>
          
          <a href="#tax-guides" class="inline-block px-8 py-4 bg-primary text-white rounded-lg text-lg font-semibold hover:bg-secondary transition-colors">
            Get Started
          </a>
        </div>
        
        <div>
          <CryptoPriceWidget client:load />
        </div>
      </div>
    </div>
  </section>

  <section id="news" class="py-20 bg-gray-50">
    <div class="container mx-auto px-4">
      <h2 class="text-4xl font-bold mb-8">Latest Updates</h2>
      <div class="overflow-x-auto pb-6">
        <div class="flex gap-6" style="min-width: min-content">
          {articles.map(article => (
            <div class="w-[400px] flex-shrink-0">
              <NewsCard
                client:load
                title={article.title}
                description={article.description}
                url={article.url}
                imageUrl={article.imageUrl}
                publishedAt={article.publishedAt}
                source={article.source.name}
              />
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>

  <section id="tax-guides" class="py-20">
    <div class="container mx-auto px-4">
      <h2 class="text-4xl font-bold mb-8">Tax Guidance</h2>
      
      <div class="mb-12">
        <h3 class="text-2xl font-bold mb-6 text-primary">Guides & Articles</h3>
        <div class="overflow-x-auto pb-6">
          <div class="flex gap-6" style="min-width: min-content">
            {taxGuides.map(guide => (
              <div class="w-[300px] flex-shrink-0 bg-white rounded-lg shadow-md overflow-hidden">
                <div class="p-6">
                  <span class="text-sm text-primary font-semibold">{guide.category}</span>
                  <h3 class="text-xl font-bold mt-2 mb-3">{guide.title}</h3>
                  <p class="text-gray-600">{guide.description}</p>
                  <button class="mt-4 text-primary hover:text-secondary font-semibold">
                    Read More â†’
                  </button>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>

      <div class="mb-12">
        <h3 class="text-2xl font-bold mb-6 text-primary">Tools & Resources</h3>
        <div class="overflow-x-auto pb-6">
          <div class="flex gap-6" style="min-width: min-content">
            {resources.map(item => (
              <div class="w-[350px] flex-shrink-0">
                <a href={item.link} class="block h-full bg-white rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow">
                  <h4 class="text-xl font-semibold mb-2">{item.title}</h4>
                  <p class="text-gray-600">{item.description}</p>
                </a>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  </section>

  <section id="learn" class="py-20 bg-gray-50">
    <div class="container mx-auto px-4">
      <h2 class="text-4xl font-bold mb-8">Edu</h2>
      <div class="overflow-x-auto pb-6">
        <div class="flex gap-6" style="min-width: min-content">
          {courses.map(course => (
            <div class="w-[350px] flex-shrink-0 bg-white rounded-lg shadow-md overflow-hidden">
              <div class="p-6">
                <h3 class="text-xl font-bold mb-2">{course.title}</h3>
                <p class="text-gray-600 mb-4">{course.description}</p>
                <div class="flex justify-between text-sm text-gray-500">
                  <span>Duration: {course.duration}</span>
                  <span>Level: {course.level}</span>
                </div>
              </div>
              <div class="px-6 py-4 bg-gray-50">
                <button class="block w-full text-center py-2 px-4 bg-primary text-white rounded hover:bg-secondary transition-colors">
                  Start Learning
                </button>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>

  <ChatBot client:load />
</Layout>

<style>
  .overflow-x-auto {
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none;
    -ms-overflow-style: none;
  }
  .overflow-x-auto::-webkit-scrollbar {
    display: none;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const links = document.querySelectorAll('a[href^="#"]');
    
    links.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        const targetId = link.getAttribute('href')?.slice(1);
        if (targetId) {
          const targetElement = document.getElementById(targetId);
          if (targetElement) {
            targetElement.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        }
      });
    });
  });
</script>